(self.webpackChunkarco_lesscode=self.webpackChunkarco_lesscode||[]).push([[189],{"./src/components/FormRender/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__,b:()=>FormRender});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),_arco_design_web_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/@arco-design+web-react@2.66.4_@types+react@19.1.10_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@arco-design/web-react/es/Button/index.js"),_arco_design_web_react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/@arco-design+web-react@2.66.4_@types+react@19.1.10_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@arco-design/web-react/es/Form/index.js"),_arco_design_web_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/@arco-design+web-react@2.66.4_@types+react@19.1.10_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@arco-design/web-react/es/Space/index.js"),react__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),_libs_index__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/libs/index.ts");const{useForm}=_arco_design_web_react__WEBPACK_IMPORTED_MODULE_2__.A;function FormRender(props){const[form]=props.form?[props.form]:useForm(),[properties,setProperties]=(0,react__WEBPACK_IMPORTED_MODULE_4__.useState)({}),{maxWidth,submitText,labelCol,wrapperCol,hiddenReset,...otherProps}=props,onValuesChange=(0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)((changedValues,allValues)=>{const nextProperties=Object.entries(props.schemas.properties).reduce((acc,[key,field])=>({...acc,[key]:{...field,..."function"==typeof field.reload?field.reload(changedValues,allValues,field,form):{}}}),{});setProperties(nextProperties)},[props.schemas.properties,form]);return(0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{setProperties(props.schemas.properties)},[props.schemas.properties]),(0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{form.setFieldsValue(props.initialValues)},[props.initialValues,form]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{maxWidth:maxWidth||"100%",width:"100%"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_libs_index__WEBPACK_IMPORTED_MODULE_5__.o,{form,...otherProps,schemas:{...props.schemas,properties},onValuesChange:(value,values)=>{onValuesChange(value,values),props?.onValuesChange?.(value,values)},comments:props.comments}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"flex justify-start",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_arco_design_web_react__WEBPACK_IMPORTED_MODULE_2__.A.Item,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_arco_design_web_react__WEBPACK_IMPORTED_MODULE_3__.A,{className:"flex justify-start",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_arco_design_web_react__WEBPACK_IMPORTED_MODULE_1__.A,{type:"primary",loading:props.submitting,onClick:()=>form.submit(),children:submitText||"提交"}),!hiddenReset&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_arco_design_web_react__WEBPACK_IMPORTED_MODULE_1__.A,{onClick:()=>{props?.onReset?.(),form.resetFields()},children:"重置"})]})})})]})}const __WEBPACK_DEFAULT_EXPORT__=FormRender;FormRender.__docgenInfo={description:"",methods:[],displayName:"FormRender",props:{form:{required:!1,tsType:{name:"FormInstance"},description:""},maxWidth:{required:!1,tsType:{name:"string"},description:""},submitting:{required:!1,tsType:{name:"boolean"},description:""},hiddenReset:{required:!1,tsType:{name:"boolean"},description:""},submitText:{required:!1,tsType:{name:"string"},description:""},schemas:{required:!0,tsType:{name:"FormSchemas"},description:""},comments:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"},description:""},initialValues:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"},description:""},onValuesChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: unknown, values: unknown) => void",signature:{arguments:[{type:{name:"unknown"},name:"value"},{type:{name:"unknown"},name:"values"}],return:{name:"void"}}},description:""},onReset:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onSubmit:{required:!1,tsType:{name:"signature",type:"function",raw:"(values: Record<string, unknown>) => void",signature:{arguments:[{type:{name:"Record",elements:[{name:"string"},{name:"unknown"}],raw:"Record<string, unknown>"},name:"values"}],return:{name:"void"}}},description:""}},composes:["Partial"]}},"./stories/FormRender.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,ComplexForm:()=>ComplexForm,DataFetch:()=>DataFetch,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js"),qs__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/.pnpm/@arco-design+web-react@2.66.4_@types+react@19.1.10_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@arco-design/web-react/dist/css/arco.css"),__webpack_require__("./node_modules/.pnpm/qs@6.14.0/node_modules/qs/lib/index.js")),qs__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(qs__WEBPACK_IMPORTED_MODULE_2__),_src_components_FormRender__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/FormRender/index.tsx"),_arco_design_web_react__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/.pnpm/@arco-design+web-react@2.66.4_@types+react@19.1.10_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@arco-design/web-react/es/Typography/index.js"),react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"FormRender",component:_src_components_FormRender__WEBPACK_IMPORTED_MODULE_3__.A,parameters:{},tags:["autodocs"],args:{},argTypes:{}},Basic={parameters:{docs:{description:{story:"依据 schemas 规则结构灵活构造表单"}}},render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_arco_design_web_react__WEBPACK_IMPORTED_MODULE_4__.A.Title,{heading:5,style:{marginTop:0},children:"基本用法"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{paddingTop:"16px",width:"100%"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src_components_FormRender__WEBPACK_IMPORTED_MODULE_3__.A,{layout:"vertical",schemas:{type:"array",properties:{username:{compName:"AutoComplete",compProps:{}}}},comments:{username:"USERNAME"},onSubmit:values=>{console.log({values})}})})]})},DataFetch={parameters:{docs:{description:{story:"依据 schemas 规则结构构造联动表单，keyword 选择后，会远程加载 project 列表"}}},render:()=>{const RequestREF=(0,react__WEBPACK_IMPORTED_MODULE_5__.useRef)(null);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_arco_design_web_react__WEBPACK_IMPORTED_MODULE_4__.A.Title,{heading:5,style:{marginTop:0},children:"请求 API 数据填充 Selec 组件配置案例"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{paddingTop:"16px",width:"100%"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src_components_FormRender__WEBPACK_IMPORTED_MODULE_3__.A,{layout:"vertical",schemas:{type:"array",properties:{keyword:{compName:"Select",compProps:{options:["react","vue"]},reload:(v,values,s,f)=>(v.keyword&&RequestREF.current?.setParams({q:v.keyword}),{...s})},project:{compName:"Select",compProps:{},provider:{compName:"RequestProvider",compProps:{ref:RequestREF,service:({q})=>{return params={q:q||"react"},fetch(`https://api.github.com/search/repositories?${qs__WEBPACK_IMPORTED_MODULE_2___default().stringify(params)}`).then(res=>res.json());var params}},injectProps:{schema:{options:{dataIndex:["items"],format:items=>items?.map(item=>item.full_name)}}}}}}},onSubmit:arg=>{console.log({arg})}})})]})}},ComplexForm={parameters:{docs:{description:{story:"依据 schemas 规则结构灵活构造复杂表单"}}},render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_arco_design_web_react__WEBPACK_IMPORTED_MODULE_4__.A.Title,{heading:5,style:{marginTop:0},children:"复杂表单构造"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{paddingTop:"16px",width:"100%"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src_components_FormRender__WEBPACK_IMPORTED_MODULE_3__.A,{layout:"vertical",schemas:{type:"array",properties:{title:{label:"文档标题",compName:"Input"},slug:{label:"标识",span:4,compName:"Input"},path:{label:"接口地址",span:20,compName:"Input"},method:{label:"请求方式",span:4,compName:"Select",compProps:{options:["Accept","Accept-CH","Accept-Encoding","Accept-Language","Accept-Patch","Accept-Post","Accept-Ranges","Access-Control-Allow-Credentials","Access-Control-Allow-Headers","Access-Control-Allow-Methods","Access-Control-Allow-Origin","Access-Control-Expose-Headers","Access-Control-Max-Age","Access-Control-Request-Headers","Access-Control-Request-Method"]}},responseType:{label:"返回类型",span:20,compName:"Select",compProps:{options:["application/json","application/xml","text/plain","application/octet-stream"]}},description:{label:"接口描述",compName:"InputTextArea"},headers:{compName:"List",span:18,label:"请求 Header",compProps:{schemas:{type:"array",properties:{key:{compName:"Select",span:12,compProps:{allowCreate:!0,options:["application/json","application/xml","text/plain","application/octet-stream"]}},value:{span:12,compName:"Input"}}}}},params:{compName:"List",span:18,label:"请求 Params",compProps:{schemas:{type:"array",properties:{name:{span:4,compName:"Input",compProps:{placeholder:"字段"}},required:{span:4,compName:"Select",compProps:{placeholder:"是否必填",options:["必填","非必填"]}},key:{span:4,compName:"Select",compProps:{allowCreate:!0,placeholder:"类型",options:["STRING","INT","OBJECT"]}},value:{span:12,compName:"Input",compProps:{placeholder:"说明"}}}}}},data:{label:"请求 Body",compName:"List",span:18,compProps:{schemas:{type:"array",properties:{name:{span:4,compName:"Input",compProps:{placeholder:"字段"}},required:{span:4,compName:"Select",compProps:{placeholder:"是否必填",options:["必填","非必填"]}},key:{span:4,compName:"Select",compProps:{allowCreate:!0,placeholder:"类型",options:["STRING","INT","OBJECT"]}},value:{span:12,compName:"Input",compProps:{placeholder:"说明"}}}}},reload:(v,values,s,f)=>({...s,hidden:["GET","HEAD","CONNECT"].includes(values.method)})},scene:{compName:"TabsList",label:"应用场景",compProps:{schemas:{properties:{type:{span:24,compName:"Input",label:"场景标题",compProps:{placeholder:"应用场景"}},code:{span:24,compName:"InputTextArea",label:"场景描述",compProps:{placeholder:"场景描述"}}}}}}}},onSubmit:values=>{console.log({values})}})})]})},__namedExportsOrder=["Basic","DataFetch","ComplexForm"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    docs: {\n      description: {\n        story: "依据 schemas 规则结构灵活构造表单"\n      }\n    }\n  },\n  render: () => {\n    return <div>\n        <Typography.Title heading={5} style={{\n        marginTop: 0\n      }}>\n          基本用法\n        </Typography.Title>\n\n        <div style={{\n        paddingTop: "16px",\n        width: "100%"\n      }}>\n          <FormRender layout="vertical" schemas={{\n          type: "array",\n          properties: {\n            username: {\n              compName: "AutoComplete",\n              compProps: {}\n            }\n          }\n        }} comments={{\n          username: "USERNAME"\n        }} onSubmit={values => {\n          console.log({\n            values\n          });\n        }} />\n        </div>\n      </div>;\n  }\n}',...Basic.parameters?.docs?.source}}},DataFetch.parameters={...DataFetch.parameters,docs:{...DataFetch.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    docs: {\n      description: {\n        story: "依据 schemas 规则结构构造联动表单，keyword 选择后，会远程加载 project 列表"\n      }\n    }\n  },\n  render: () => {\n    const RequestREF = useRef<RequestProviderRefType<{\n      q: string;\n    }>>(null);\n    return <div>\n        <Typography.Title heading={5} style={{\n        marginTop: 0\n      }}>\n          请求 API 数据填充 Selec 组件配置案例\n        </Typography.Title>\n\n        <div style={{\n        paddingTop: "16px",\n        width: "100%"\n      }}>\n          <FormRender layout="vertical" schemas={{\n          type: "array",\n          properties: {\n            keyword: {\n              compName: "Select",\n              compProps: {\n                options: ["react", "vue"]\n              },\n              reload(v, values, s, f) {\n                if (v.keyword) {\n                  RequestREF.current?.setParams({\n                    q: v.keyword\n                  });\n                }\n                return {\n                  ...s\n                };\n              }\n            },\n            project: {\n              compName: "Select",\n              compProps: {},\n              provider: {\n                compName: "RequestProvider",\n                compProps: {\n                  ref: RequestREF,\n                  service: ({\n                    q\n                  }: any) => service({\n                    q: q || "react"\n                  })\n                },\n                injectProps: {\n                  schema: {\n                    options: {\n                      dataIndex: ["items"],\n                      format(items: any) {\n                        return items?.map(item => item.full_name);\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }} onSubmit={arg => {\n          console.log({\n            arg\n          });\n        }} />\n        </div>\n      </div>;\n  }\n}',...DataFetch.parameters?.docs?.source}}},ComplexForm.parameters={...ComplexForm.parameters,docs:{...ComplexForm.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    docs: {\n      description: {\n        story: "依据 schemas 规则结构灵活构造复杂表单"\n      }\n    }\n  },\n  render: () => {\n    return <div>\n        <Typography.Title heading={5} style={{\n        marginTop: 0\n      }}>\n          复杂表单构造\n        </Typography.Title>\n\n        <div style={{\n        paddingTop: "16px",\n        width: "100%"\n      }}>\n          <FormRender layout="vertical" schemas={{\n          type: "array",\n          properties: {\n            title: {\n              label: "文档标题",\n              compName: "Input"\n            },\n            slug: {\n              label: "标识",\n              span: 4,\n              compName: "Input"\n            },\n            path: {\n              label: "接口地址",\n              span: 20,\n              compName: "Input"\n            },\n            method: {\n              label: "请求方式",\n              span: 4,\n              compName: "Select",\n              compProps: {\n                options: ["Accept", "Accept-CH", "Accept-Encoding", "Accept-Language", "Accept-Patch", "Accept-Post", "Accept-Ranges", "Access-Control-Allow-Credentials", "Access-Control-Allow-Headers", "Access-Control-Allow-Methods", "Access-Control-Allow-Origin", "Access-Control-Expose-Headers", "Access-Control-Max-Age", "Access-Control-Request-Headers", "Access-Control-Request-Method"]\n              }\n            },\n            responseType: {\n              label: "返回类型",\n              span: 20,\n              compName: "Select",\n              compProps: {\n                options: ["application/json", "application/xml", "text/plain", "application/octet-stream"]\n              }\n            },\n            description: {\n              label: "接口描述",\n              compName: "InputTextArea"\n            },\n            headers: {\n              compName: "List",\n              span: 18,\n              label: "请求 Header",\n              compProps: {\n                schemas: {\n                  type: "array",\n                  properties: {\n                    key: {\n                      compName: "Select",\n                      span: 12,\n                      compProps: {\n                        allowCreate: true,\n                        options: ["application/json", "application/xml", "text/plain", "application/octet-stream"]\n                      }\n                    },\n                    value: {\n                      span: 12,\n                      compName: "Input"\n                    }\n                  }\n                }\n              }\n            },\n            params: {\n              compName: "List",\n              span: 18,\n              label: "请求 Params",\n              compProps: {\n                schemas: {\n                  type: "array",\n                  properties: {\n                    name: {\n                      span: 4,\n                      compName: "Input",\n                      compProps: {\n                        placeholder: "字段"\n                      }\n                    },\n                    required: {\n                      span: 4,\n                      compName: "Select",\n                      compProps: {\n                        placeholder: "是否必填",\n                        options: ["必填", "非必填"]\n                      }\n                    },\n                    key: {\n                      span: 4,\n                      compName: "Select",\n                      compProps: {\n                        allowCreate: true,\n                        placeholder: "类型",\n                        options: ["STRING", "INT", "OBJECT"]\n                      }\n                    },\n                    value: {\n                      span: 12,\n                      compName: "Input",\n                      compProps: {\n                        placeholder: "说明"\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            data: {\n              label: "请求 Body",\n              compName: "List",\n              span: 18,\n              compProps: {\n                schemas: {\n                  type: "array",\n                  properties: {\n                    name: {\n                      span: 4,\n                      compName: "Input",\n                      compProps: {\n                        placeholder: "字段"\n                      }\n                    },\n                    required: {\n                      span: 4,\n                      compName: "Select",\n                      compProps: {\n                        placeholder: "是否必填",\n                        options: ["必填", "非必填"]\n                      }\n                    },\n                    key: {\n                      span: 4,\n                      compName: "Select",\n                      compProps: {\n                        allowCreate: true,\n                        placeholder: "类型",\n                        options: ["STRING", "INT", "OBJECT"]\n                      }\n                    },\n                    value: {\n                      span: 12,\n                      compName: "Input",\n                      compProps: {\n                        placeholder: "说明"\n                      }\n                    }\n                  }\n                }\n              },\n              reload(v, values, s, f) {\n                return {\n                  ...s,\n                  hidden: ["GET", "HEAD", "CONNECT"].includes(values["method"])\n                };\n              }\n            },\n            scene: {\n              compName: "TabsList",\n              label: "应用场景",\n              compProps: {\n                schemas: {\n                  properties: {\n                    type: {\n                      span: 24,\n                      compName: "Input",\n                      label: "场景标题",\n                      compProps: {\n                        placeholder: "应用场景"\n                      }\n                    },\n                    code: {\n                      span: 24,\n                      compName: "InputTextArea",\n                      label: "场景描述",\n                      compProps: {\n                        placeholder: "场景描述"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }} onSubmit={values => {\n          console.log({\n            values\n          });\n        }} />\n        </div>\n      </div>;\n  }\n}',...ComplexForm.parameters?.docs?.source}}}},"?6b64":()=>{}}]);